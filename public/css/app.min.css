hr,img{border:0}.clearfix::after,.row::after{clear:both;content:' '}@font-face{font-family:Montserrat;font-style:normal;font-weight:400;src:local('Montserrat Regular'),local('Montserrat-Regular'),url(https://fonts.gstatic.com/s/montserrat/v12/zhcz-_WihjSQC0oHJ9TCYC3USBnSvpkopQaUR-2r7iU.ttf) format('truetype')}@font-face{font-family:Montserrat;font-style:normal;font-weight:700;src:local('Montserrat Bold'),local('Montserrat-Bold'),url(https://fonts.gstatic.com/s/montserrat/v12/IQHow_FEYlDC4Gzy_m8fcvEr6Hm6RMS0v1dtXsGir4g.ttf) format('truetype')}@font-face{font-family:Lato;font-style:normal;font-weight:400;src:local('Lato Regular'),local('Lato-Regular'),url(https://fonts.gstatic.com/s/lato/v14/v0SdcGFAl2aezM9Vq_aFTQ.ttf) format('truetype')}@font-face{font-family:Roboto;font-style:normal;font-weight:300;src:local('Roboto Light'),local('Roboto-Light'),url(https://fonts.gstatic.com/s/roboto/v18/Hgo13k-tfSpn0qi1SFdUfaCWcynf_cDxXwCLxiixG1c.ttf) format('truetype')}@font-face{font-family:Roboto;font-style:normal;font-weight:400;src:local('Roboto'),local('Roboto-Regular'),url(https://fonts.gstatic.com/s/roboto/v18/zN7GBFwfMP4uA6AR0HCoLQ.ttf) format('truetype')}/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent;text-decoration:none}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,optgroup,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{max-width:100%}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;margin-top:25px;margin-bottom:25px;border-top:1px solid #c1c6cb}pre,textarea{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}body{margin:85px 0 0;font-family:sans-serif,Lato;font-size:15px;line-height:1.5;color:#222;background-color:#f1f1f1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}ol,ul{margin:0;padding:0;list-style:none}h1,h2,h3,h4,h5,h6,p{margin:0;padding:0;color:#222}blockquote cite{font-weight:700;display:block;margin:10px 0 0}.clearfix::after{display:table}.level{display:-webkit-box;display:-ms-flexbox;display:flex;-moz-align-items:center;-ms-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-moz-justify-content:space-between;-ms-justify-content:space-between;-webkit-box-pack:justify;justify-content:space-between;-ms-flex-pack:space-between}.level-left,.level-right{display:-webkit-box;display:-ms-flexbox;display:flex;-moz-align-items:center;-ms-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-moz-flex-grow:0;-ms-flex-grow:0;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-basis:auto;-ms-flex-preferred-size:auto;flex-basis:auto}.level-left{-moz-justify-content:flex-start;-ms-justify-content:flex-start;-webkit-box-pack:start;justify-content:flex-start;-ms-flex-pack:flex-start}.level-right{-moz-justify-content:flex-end;-ms-justify-content:flex-end;-webkit-box-pack:end;justify-content:flex-end;-ms-flex-pack:flex-end}.row::after{display:table}.all-site-wrap{display:-webkit-box;display:-ms-flexbox;display:flex}.site-header::after,.site-header__head::after,.site-header__inner::after{clear:both;content:' ';display:table}.stripe-rainbow{background-image:url(http://blog.teamtreehouse.com/wp-content/themes/treehouse-treehouse-blog-reboot-d52be032409979219bf3dc804312e918a26a251c/img/footer.svg);height:7px;width:100%;position:relative;z-index:2000}.site-header{background-color:#252527;z-index:9000;position:fixed;top:0;right:0;left:0}.site-header__head{padding:.6em 2.3em;position:relative}.site-header__logo-wrapper{float:left}.site-header__logo{color:#fff;font-size:2.5rem}.site-header__hamburger{position:relative;border:0;background:0 0;float:right;width:30px;height:30px}.site-header__hamburger--bar,.site-header__hamburger--bar:after,.site-header__hamburger--bar:before{position:absolute;left:0;width:100%;height:3px;margin-top:-1px;-webkit-transition:background .3s 0s ease,top .3s .2s ease,bottom .3s .2s ease,-webkit-transform .3s 0s ease;-o-transition:background .3s 0s ease,transform .3s 0s ease,top .3s .2s ease,bottom .3s .2s ease;transition:background .3s 0s ease,transform .3s 0s ease,top .3s .2s ease,bottom .3s .2s ease;transition:background .3s 0s ease,transform .3s 0s ease,top .3s .2s ease,bottom .3s .2s ease,-webkit-transform .3s 0s ease;border-radius:3px;background-color:#606060}.site-header__hamburger--bar:after,.site-header__hamburger--bar:before{content:" "}.site-header__hamburger--bar:before{top:-8px}.site-header__hamburger--bar:after{bottom:-9px}.site-header__hamburger.is-active .site-header__hamburger--bar{background:rgba(255,8,8,0)}.site-header__hamburger.is-active .site-header__hamburger--bar:after,.site-header__hamburger.is-active .site-header__hamburger--bar:before{-webkit-transition:background .3s 0s ease,top .3s 0s ease,bottom .3s 0s ease,-webkit-transform .3s .2s ease;-o-transition:background .3s 0s ease,transform .3s .2s ease,top .3s 0s ease,bottom .3s 0s ease;transition:background .3s 0s ease,transform .3s .2s ease,top .3s 0s ease,bottom .3s 0s ease;transition:background .3s 0s ease,transform .3s .2s ease,top .3s 0s ease,bottom .3s 0s ease,-webkit-transform .3s .2s ease}.site-header__hamburger.is-active .site-header__hamburger--bar:before{top:0;-ms-transform:rotate(45deg);-webkit-transform:rotate(45deg);transform:rotate(45deg)}.site-header__hamburger.is-active .site-header__hamburger--bar:after{bottom:0;-ms-transform:rotate(-45deg);-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.site-nav{text-align:center;border:3px solid #232323;background-color:#292929;-webkit-box-flex:33.33%;-ms-flex:33.33%;flex:33.33%;position:absolute;width:100%;-webkit-transition:.15s;-o-transition:.15s;transition:.15s;z-index:1000;-ms-transform:translateY(-100%);-webkit-transform:translateY(-100%);transform:translateY(-100%)}.site-nav.is-active{-ms-transform:translateY(0);-webkit-transform:translateY(0);transform:translateY(0)}@media (min-width:720px){.site-nav{padding:1rem 0 0;-webkit-box-flex:0;-ms-flex:0 0 100px;flex:0 0 100px}}.site-nav__list{display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;-ms-flex-wrap:wrap;flex-wrap:wrap}@media (min-width:720px){.site-nav__list{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}}@media (min-width:960px){.site-nav{position:relative;-webkit-transform:unset;-ms-transform:unset;transform:unset}.site-nav__list{display:block;width:unset;-ms-flex-wrap:unset;flex-wrap:unset;-webkit-box-pack:none;-ms-flex-pack:none;justify-content:none}}.site-nav__item{-ms-flex-preferred-size:33.3333%;flex-basis:33.3333%}@media (min-width:720px){.site-nav__item{-ms-flex-preferred-size:unset;flex-basis:unset;width:unset}}.site-nav__link{color:#fff;display:block;font-size:3em;line-height:1rem;font-weight:500;letter-spacing:.04rem;padding:.75rem .5rem;text-transform:uppercase;margin:3px 4px}.site-nav__link:hover{background:#252527}.site-nav__icon{pointer-events:none;margin:0 auto .1rem;fill:#fff;display:block}.site-nav__text{display:block;font-size:.6rem}.main{display:-webkit-box;display:-ms-flexbox;display:flex;display:block;-webkit-box-flex:1;-ms-flex:1;flex:1;width:100%;z-index:40;position:relative}.main--picture{position:fixed;top:0;right:0;bottom:0;left:0;z-index:-30}.main__page-card{margin:40px;padding:30px;background:#fff;position:relative;z-index:-20}.section--medium{margin:40px 0}.btn{color:#fff;font-weight:700;padding:7px 11px;border:0;-webkit-transition:.25 ease-in-out;-o-transition:.25 ease-in-out;transition:.25 ease-in-out}.theme-bg__item{width:50%;height:430px;overflow:hidden;border-radius:23px;cursor:pointer;border:2px solid transparent;float:left}.theme-bg__item:hover{border-color:red}.theme-bg__item.is-active{border-color:gold}@media (min-width:720px){.theme-bg__item{width:33.3333%;height:120px}}.theme-bg__img{width:100%;height:100%;background-size:cover}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
